---
   - name: Get the details of cluster 
     dellemc.powerstore.cluster:
       array_ip: "{{array_ip}}"
       verifycert: "{{verifycert}}"
       user: "{{user}}"
       password: "{{password}}"
       cluster_id: "0"
       state: "present"
     register: results
   - name: Print the details of cluster
     debug:
       var: results
## tasks file for info
#   - name: Get list of volumes, volume groups, hosts, host groups and node
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - vol
#         - vg
#         - host
#         - hg
#         - node
#   
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   - name: Get list of replication related entities
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - replication_rule
#         - replication_session
#         - remote_system
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of volumes whose state notequal to ready
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - vol
#       filters:
#         - filter_key: "state"
#           filter_operator: "notequal"
#           filter_value: "ready"
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of protection policies and snapshot rules
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - protection_policy
#         - snapshot_rule
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of snapshot rules whose desired_retention between 101-499
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - snapshot_rule
#       filters:
#         - filter_key: "desired_retention"
#           filter_operator: "greater"
#           filter_value: "100"
#         - filter_key: "desired_retention"
#           filter_operator: "lesser"
#           filter_value: "500"
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of nas server, nfs_export and smb share
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - nas_server
#         - nfs_export
#         - smb_share
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of tree quota, user quota and file system
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - tree_quota
#         - user_quota
#         - file_system
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of nas server whose name equal to 'nas_server'
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - nas_server
#       filters:
#         - filter_key: "name"
#           filter_operator: "equal"
#           filter_value: "nas_server"
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of smb share whose name contains 'share'
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - nas_server
#       filters:
#         - filter_key: "name"
#           filter_operator: "like"
#           filter_value: "*share*"
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of user, role, network and appliances
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - user
#         - role
#         - network
#         - appliance
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of ad, certificate, security config and ldaps
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - ad
#         - ldap
#         - certificate
#         - security_config
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of networks whose name contains 'Management'
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - network
#       filters:
#         - filter_key: "name"
#           filter_operator: "like"
#           filter_value: "*Management*"
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of dns, email notification, ntp, remote support, remote support contact and smtp config
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - dns
#         - email_notification
#         - ntp
#         - remote_support
#         - remote_support_contact
#         - smtp_config
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of emails which receives minor notifications
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#       - email_notification
#       filters:
#           - filter_key: 'notify_minor'
#             filter_operator: 'equal'
#             filter_value: 'False'
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of LDAP accounts
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - ldap_account
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of LDAP accounts with type as "User"
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#       - ldap_account
#       filters:
#           - filter_key: 'type'
#             filter_operator: 'equal'
#             filter_value: 'User'
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of LDAP domain
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#         - ldap_domain
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
#   
#   - name: Get list of LDAP domain with protocol as "LDAPS"
#     dellemc.powerstore.info:
#       array_ip: "{{array_ip}}"
#       verifycert: "{{verifycert}}"
#       user: "{{user}}"
#       password: "{{password}}"
#       gather_subset:
#       - ldap_domain
#       filters:
#           - filter_key: 'protocol'
#             filter_operator: 'equal'
#             filter_value: 'LDAPS'
#     register: results
#   - name: Print the details of cluster
#     debug:
#       var: results
